{
    "componentChunkName": "component---src-pages-post-tsx",
    "path": "/Javascript/호이스팅이란?",
    "result": {"data":{"markdownRemark":{"html":"<h1>호이스팅이란?</h1>\n<p>MDN 문서를 보면</p>\n<blockquote>\n<p>JavaScript에서 호이스팅(hoisting)이란, 인터프리터가 변수와 함수의 메모리 공간을 선언 전에 미리 할당하는 것을 의미합니다.</p>\n</blockquote>\n<p>라고 나와있는데요. 어떤식으로 동작하는지 확인해 보겠습니다.</p>\n<h1>변수 호이스팅</h1>\n<deckgo-highlight-code language=\"javascript\"  >\n          <code slot=\"code\">// undefined\nconsole.log(varliable);\n\n// 변수 정의\nvar varliable = &quot;변수&quot;;\n\n// 변수\nconsole.log(varliable);</code>\n        </deckgo-highlight-code>\n<p>위의 코드를 보면 varliable이라는 변수가 변수가 선언되기 전에 undefined 값을 가지고 있는 것을 볼 수 있는데요.</p>\n<p>이처럼 자바스크립트 엔진이 변수나 함수가 선언되기 전에 값을 초기화하여 메모리 공간을 할당하는 것을 호이스팅이라고 합니다.</p>\n<p>그럼 const, let은 어떻게 동작하는지 확인 해 보겠습니다.</p>\n<deckgo-highlight-code language=\"javascript\"  >\n          <code slot=\"code\">// Uncaught ReferenceError: Cannot access &#39;constant&#39; before initialization\nconsole.log(constant);\n\nconst constant = &quot;상수&quot;;\n\n// Uncaught ReferenceError: Cannot access &#39;varliable&#39; before initialization\nconsole.log(varliable);\n\nlet varliable = &quot;변수&quot;;</code>\n        </deckgo-highlight-code>\n<p>위의 구문처럼 const, let을 사용할 경우 자바스크립트 엔진이 메모리 공간을 확보하긴 하지만, 값을 초기화하지 않아</p>\n<p>ReferenceError 발생하게 됩니다.</p>\n<h1>함수 호이스팅</h1>\n<p>우선 자바스크립트에서 함수를 정의할 때는 변수에 담아 정의하거나, function을 이용하여 정의하는 방법이 있는데요.</p>\n<p>두가지 다 확인해보겠습니다.</p>\n<deckgo-highlight-code language=\"javascript\"  >\n          <code slot=\"code\">// Uncaught TypeError: fnc is not a function\nfnc();\n\nvar fnc = function () {\n  console.log(&quot;this is function!&quot;);\n};\n\n// Uncaught ReferenceError: Cannot access &#39;fnc2&#39; before initialization\nfnc2();\n\nconst fnc2 = function () {\n  console.log(&quot;this is function2!&quot;);\n};</code>\n        </deckgo-highlight-code>\n<p>위의 코드처럼 변수를 이용하여 함수를 선언하는것은 위의 변수 호이스팅과 같은 동작을 합니다.</p>\n<p>var를 이용하여 선언했을 때 fnc라는 값을 undefined로 초기화를 하지만 undefined는 함수가 아니기 때문에 TypeError가 발생하게 됩니다.</p>\n<p>const를 이용하여 선언했을 때 fnc2라는 변수의 메모리 공간은 확보를 했지만, 초기화된 값이 없기때문에 ReferenceError가 발생하게 됩니다.</p>\n<p>그럼 이제 function을 이용하여 선언했을 경우 어떻게 동작되어 지는지 알아볼까요??</p>\n<deckgo-highlight-code language=\"javascript\"  >\n          <code slot=\"code\">// this is function!\nfnc();\n\nfunction fnc() {\n  console.log(&quot;this is function!&quot;);\n}</code>\n        </deckgo-highlight-code>\n<p>이번에 경우에는 함수가 잘 실행이 됩니다.</p>\n<p>자바스크립트 엔진은 function으로 함수를 선언할 경우 호이스팅이 될 때 함수가 같이 선언되어 지는것을 확인할 수 있습니다.</p>","frontmatter":{"title":"[Javascript] 호이스팅이란?","slug":"호이스팅이란?","date":"2021.11.30","description":"[Javascript] Javascript에서 변수 호이스팅과 함수 호이스팅에 대해 설명할 수 있다."}}},"pageContext":{"id":"d1910f6c-0e53-59f0-be1d-751c145f2972"}},
    "staticQueryHashes": []}