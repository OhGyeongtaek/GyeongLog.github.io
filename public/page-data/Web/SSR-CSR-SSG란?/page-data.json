{
    "componentChunkName": "component---src-pages-post-tsx",
    "path": "/Web/SSR-CSR-SSG란?",
    "result": {"data":{"markdownRemark":{"html":"<h1>SSR(Server Side Rendering)</h1>\n<p>사용자가 서버에 페이지를 요청하는 시점에 HTML을 생성하여 사용자에게 전달하는 방식</p>\n<h2>SSR의 장점</h2>\n<ul>\n<li>초기 화면 로딩 속도가 빠르다.</li>\n<li>SEO에 유리하다.</li>\n</ul>\n<h2>SSR의 단점</h2>\n<ul>\n<li>화면 깜빡임이 있다.</li>\n<li>TTV와 TTI간의 간격이 있어 사용자 경험에 좋지 않다.</li>\n<li>서버에 해당 페이지를 요청하는 즉시 HTML을 생성하기에 서버 부하가 있다.</li>\n</ul>\n<h1>CSR(Client Side Rendering)</h1>\n<p>사용차가 첫 요청시 서버에서 빈 HTML 파일을 전달받고 HTML에 링크된 JS파일을 서버로부터 다운받아 동적으로 HTML을 생성하는 방식</p>\n<h2>CSR의 장점</h2>\n<ul>\n<li>페이지가 이동되어지는 시점에 페이지가 전부 렌더링이 되지 않아 빠르다.</li>\n<li>TTV와 TTI의 간격이 없어 사용자 경험에 좋다.</li>\n</ul>\n<h2>CSR의 단점</h2>\n<ul>\n<li>SEO가 불리하다.</li>\n<li>초기 화면 로딩속도가 느리다.</li>\n</ul>\n<h2>CSR의 단점 보안 방법</h2>\n<h3>초기 로딩속도 개선 방법</h3>\n<ul>\n<li>라이브러리, 프레임워크에서 제공하는 Code Splitting 기능을 통해 App.js의 파일 크기를 줄일 수 있다.</li>\n<li>웹팩에서 제공하는 Tree Shaking 기능을 통해 실제로 사용하지 않는 코드를 빌드할 때 제거하는 기능을 사용할 수 있다.</li>\n</ul>\n<h3>SEO 개선 방법</h3>\n<ul>\n<li>pre render 플러그인을 통해 HTML파일을 미리 생성해두는 방식을 사용할 수 있다.</li>\n</ul>\n<h1>SSG(Static Side Generation)</h1>\n<p>서버에서 미리 사용자에게 보여지는 HTML을 생성해두고 사용자가 요청시 미리 만들어 둔 HTML파일을 전달하는 방식</p>\n<h1>TTV(Time To View)</h1>\n<p>사용자가 사이트에 접속 하고부터 화면이 보는 시점까지의 걸리는 시간.</p>\n<h1>TTI(Time To Interact)</h1>\n<p>사용자가 사이트에 접속 하고부터 사이트의 기능을 사용할 수 있을 때 까지의 시간.</p>\n<h1>Isomorphic App</h1>\n<p>초기 랜더링방식에서는 SSR를 사용하고 그 이후부터는 CSR를 사용하는 방식의 어플리케이션</p>\n<h2>Isomorphic App의 장점</h2>\n<ul>\n<li>SEO에 유리하다.</li>\n<li>화면 깜빡임이 없다.</li>\n<li>초기 렌더링 방식이 빠르다.</li>\n<li>페이지가 이동되어지는 시점에 페이지가 전부 렌더링이 되지 않아 빠르다.</li>\n</ul>\n<h2>Isomorphic App의 단점</h2>\n<ul>\n<li>CSR에 비해 코드의 복잡도가 올라간다.</li>\n<li>프레임워크다 보니 직접 제어할 수 없는 영역이 존재한다.</li>\n</ul>\n<h1>그럼 SSR, CSR, SSG, Isomorphic App 중 어떤것을 사용해야 할까요??</h1>\n<p>사이트의 성격에 따라 어떤 렌더링 방식을 사용할지 고민을 해봐야 합니다.</p>\n<ul>\n<li>SSR: 데이터가 자주 바뀌고 SEO를 통해 검색포털 상위에 노출해야 하는 경우 적합합니다.</li>\n<li>CSR: 고객의 개인정보가 많이 이용되어 지는 경우 SEO를 통해 포털 상위에 노출이 필요 없는 경우 적합합니다.</li>\n<li>SSG: 페이지의 내용이 바뀔일이 많이 없고 SEO를 통해 포털 상위에 노출해야 하는 경우 적합합니다.</li>\n<li>Isomorphic App: 빠른 반응속도도 중요하고 SEO를 통해 포털 상위에 노출이 필요한 경우 적합니다.</li>\n</ul>\n<h1>참고</h1>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=iZ9csAfU5Os\">드림코딩 엘리 - 서버사이드 렌더링</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=5W72UHb-9iI\">코드팩토리 - Client Side Rendering vs Server Side Rendering</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=YuqB8D6eCKE\">우아한Tech- 신세한탄의 CSR&#x26;SSR</a></li>\n</ul>","frontmatter":{"title":"[WEB] SSR, CSR, SSG란?","slug":"SSR-CSR-SSG란?","date":"2021.12.11","description":"[Web] SSR, CSR, SSG, Isomorphic App, TTV, TTI에 대해 이하할 수 있다."}}},"pageContext":{"id":"1aa6ac8b-9b08-5e99-856d-dc38af5ec523"}},
    "staticQueryHashes": []}